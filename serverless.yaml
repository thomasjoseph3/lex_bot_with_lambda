service: claude-lex-bedrock-bot

provider:
  name: aws
  runtime: nodejs22.x
  region: eu-west-2
  environment:
    KNOWLEDGE_BASE_ID: ${env:KNOWLEDGE_BASE_ID, '7098R9JQI9'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - bedrock:InvokeModel
            - bedrock:Retrieve
            - bedrock:RetrieveAndGenerate
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - lambda:InvokeFunction
            - lex:*
          Resource: '*'

functions:
  lexBedrockHandler:
    handler: handler.handler
    name: claude-lex-bedrock-bot-dev-lexBedrockHandler  # Explicitly set the function name
    events:
      - httpApi:
          path: /chat
          method: post

resources:
  Resources:
    MyLexBot:
      Type: AWS::Lex::Bot
      Properties:
        Name: MyBot
        DataPrivacy:
          ChildDirected: false
        IdleSessionTTLInSeconds: 300
        RoleArn: !GetAtt LexBotRole.Arn
        BotLocales:
          - LocaleId: en_US
            NluConfidenceThreshold: 0.40
            Intents:
              - Name: QueryIntent
                SampleUtterances:
                  - Utterance: I have a question
                  - Utterance: Can you help me
                  - Utterance: What information do you have
                IntentConfirmationSetting:
                  PromptSpecification:
                    MaxRetries: 2
                    MessageGroupsList:
                      - Message:
                          PlainTextMessage:
                            Value: "I'm ready to assist you with your query."
                FulfillmentCodeHook:
                  Enabled: true
              - Name: FallbackIntent
                ParentIntentSignature: AMAZON.FallbackIntent
                IntentClosingSetting:
                  ClosingResponse:
                    MessageGroupsList:
                      - Message:
                          PlainTextMessage:
                            Value: "I'm sorry, I didn't understand that. Could you please rephrase your question?"

    MyLexBotAlias:
      Type: AWS::Lex::BotAlias
      Properties:
        BotAliasName: prod
        BotId: !Ref MyLexBot
        BotAliasLocaleSettings:
          - LocaleId: en_US
            BotAliasLocaleSetting:
              Enabled: true
              CodeHookSpecification:
                LambdaCodeHook:
                  CodeHookInterfaceVersion: '1.0'
                  # Use full ARN for Lambda function
                  LambdaArn: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:claude-lex-bedrock-bot-dev-lexBedrockHandler'

    LexBotRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lexv2.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LexBotAccessPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - lambda:InvokeFunction
                    - bedrock:InvokeModel
                    - bedrock:Retrieve
                    - bedrock:RetrieveAndGenerate
                  Resource: '*'

    LexLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        # Use the full function name
        FunctionName: claude-lex-bedrock-bot-dev-lexBedrockHandler
        Principal: lexv2.amazonaws.com
        SourceArn: !Sub 'arn:aws:lex:${AWS::Region}:${AWS::AccountId}:bot-alias/${MyLexBot}/prod'

plugins:
  - serverless-api-gateway-throttling

custom:
  apiGatewayThrottling:
    maxRequestsPerSecond: 10
    maxConcurrentRequests: 5

package:
  exclude:
    - node_modules/**
    - .git/**
    - .gitignore
    - test/**
    - '*.md'